name: Update Postman Collection

on:
  schedule:
    - cron: '0 0,12 * * *'  # Runs the action every 12 hours, at 00:00 and 12:00 UTC
  workflow_dispatch:  # Allows manually triggering the workflow

jobs:
  update-collection:
    runs-on: ubuntu-latest  # This specifies the environment for running the job

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v2

    # Step 2: Fetch the latest Postman collection from the Postman API
    - name: Fetch Postman Collection
      run: |
        curl -X GET "https://api.postman.com/collections/39579054-83f54cd5-6d8f-4317-87bb-1c7f68ef47d5?access_key=${{ secrets.POSTMAN_API_KEY }}" \
        -H "Accept: application/json" -o postman-collection.json

    # Step 3: Format the Postman collection JSON for better readability
    - name: Format Postman Collection JSON
      run: |
        jq . postman-collection.json > postman-collection-formatted.json
        mv postman-collection-formatted.json postman-collection.json  # Replaces the original file with the formatted one

    # Step 4: Check if any changes were made to the file
    - name: Check if changes were made
      run: |
        # Check if there are any changes in the repository
        git status

    # Step 5: Commit and Push changes if there are any
    - name: Commit and Push changes
      run: |
        # Configure Git to use the bot for committing changes
        git config user.name "GitHub Actions"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Add the modified file to the staging area
        git add postman-collection.json
        git diff --cached  # Check the changes added to the staging area
        git commit -m "Update Postman Collection"
        
        # Push the changes to the main branch if there are modifications
        git push https://$GH_TOKEN@github.com/Dpapadopoulou96/Postman-Automate-Update-Collection.git HEAD:main
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}  # Ensure that GH_TOKEN is properly set in GitHub Secrets
